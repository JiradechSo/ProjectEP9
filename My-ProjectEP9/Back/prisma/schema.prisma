// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  username  String      @unique @db.VarChar(30)
  password  String      @db.VarChar(72)
  email     String?     @db.VarChar(150)
  fristName String?     @map("frist_name")
  lastName  String?     @map("last_name")
  phone     String?     @unique @db.VarChar(10)
  address   String?     @db.VarChar(200)
  Warehouse Warehouse[]

  @@map("users")
}

model Warehouse {
  id      Int       @id @default(autoincrement())
  name    String    @db.VarChar(72)
  user    User      @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId  Int       @map("user_id")
  Product Product[]

  @@map("warehouse")
}

model Product {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(72)
  Warehouse    Warehouse      @relation(fields: [WarehouseId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  WarehouseId  Int            @map("warehouse_id")
  imageUrl     String?
  ProductImage ProductImage[]
  SerialNumber SerialNumber[]

  @@map("product")
}

model ProductImage {
  id        Int     @id @default(autoincrement())
  url       String  @db.VarChar(240)
  Product   Product @relation(fields: [ProductId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ProductId Int     @map("product_id")

  @@map("product_image")
}

model SerialNumber {
  id        Int     @id @default(autoincrement())
  sn        String  @db.VarChar(72)
  note      String  @db.VarChar(200)
  dueDate      DateTime       @map("due_date") @db.Date
  createdAt    DateTime       @default(now()) @map("created_at") @db.Timestamp(0)
  deletedAt    DateTime       @default(now()) @map("deleted_at") @db.Timestamp(0)
  Product   Product @relation(fields: [ProductId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ProductId Int     @map("product_id")
  @@map("serial")
}
